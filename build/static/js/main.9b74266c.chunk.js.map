{"version":3,"sources":["components/partials/Header.jsx","components/search/Search.jsx","components/search/Definition.jsx","components/search/Image.jsx","components/search/Pronunciation.jsx","components/search/save.jsx","components/search/AllSearchPages.jsx","components/New/New.jsx","components/App.js","index.js"],"names":["Header","className","src","alt","to","Search","props","useState","word","setWord","onChange","event","newValue","target","value","type","name","onClick","onAdd","preventDefault","Definition","define","setDefine","fetch","addText","then","response","json","jsonResponse","undefined","meanings","definitions","definition","ImageDisplay","newImage","setNewImage","addImg","hits","largeImageURL","Pronunce","writenP","setWritenP","pronounce","setPronounce","addWord","hwi","prs","sound","writtenPron","mw","file","audio","uniChar","slice","biChar","url","match","id","autostart","controls","Save","ownDefinition","setOwnDefinition","newDefinition","rows","columns","maxLength","placeholder","console","assert","log","AllSearchPages","text","setText","words","Image","New","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9b74266c.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Header (){\r\n    return  <header>\r\n              <img className=\"head-img\" src=\"https://rigelselmani.github.io/Word-Scape/assets/images/logo%20(2).png\" alt=\"word-img\"/>\r\n              <ul>\r\n                <Link to=\"/\">\r\n                  <li>Home</li>\r\n                </Link>\r\n                <Link to=\"/wordBank\">\r\n                  <li>Word &#8226; Bank</li>\r\n                </Link>\r\n              </ul>\r\n            </header> \r\n}\r\n\r\nexport default Header;","import React,{useState} from \"react\";\r\n\r\nfunction Search(props){\r\n    const [word,setWord]=useState();\r\n    \r\n    function handleChange(event){\r\n        const newValue=event.target.value;\r\n        setWord(newValue)\r\n    }\r\n\r\n    function handleClick(event){\r\n        props.onAdd(word);\r\n        setWord(\"\");\r\n        event.preventDefault()\r\n    }\r\n    return <form>\r\n              <h3>Search a &#8226; word</h3>\r\n              <input onChange={handleChange} type=\"text\"  name=\"word\"/>\r\n              <button className=\"submit-button\" onClick={handleClick}>Search</button>\r\n           </form>\r\n}\r\n\r\nexport default Search;","import React,{useState} from \"react\";\r\n\r\nfunction Definition(props){\r\n\r\n    const [define,setDefine]=useState()\r\n  \r\n    fetch(\"https://api.dictionaryapi.dev/api/v2/entries/en/\"+props.addText)\r\n    .then(response => response.json())\r\n    .then(jsonResponse =>{\r\n      if(jsonResponse[0]===undefined||jsonResponse[0]===\"404\"||jsonResponse==={}){\r\n        return setDefine(\"Word not found\")\r\n      }else{\r\n        return setDefine(jsonResponse[0].meanings[0].definitions[0].definition)\r\n      }\r\n    })\r\n     \r\n\r\n    return <div className=\"definition\">\r\n             <h2 className=\"displayHead\">Definition</h2>\r\n             <div className=\"define\">\r\n               <p className=\"p-define\">{define}</p>\r\n             </div>\r\n           </div>\r\n} \r\n\r\nexport default Definition;","import React, { useState } from \"react\";\r\n\r\nfunction ImageDisplay(props){\r\n  \r\n    const [newImage,setNewImage]=useState();\r\n\r\n    fetch(\"https://pixabay.com/api/?key=11051593-a4e6d6adfc2d65d6b9612b399&q&q=\"+props.addImg+\"&\")\r\n    .then(response=> response.json())\r\n    .then(jsonResponse =>{\r\n\r\n      if(jsonResponse.hits[0]===undefined){\r\n       setNewImage(\"https://netflixroulette.files.wordpress.com/2013/01/image-not-found.gif\")\r\n      }else{\r\n       setNewImage(jsonResponse.hits[0].largeImageURL)\r\n      }\r\n    })\r\n\r\n    return <div className=\"definition\">\r\n              <h2 className=\"displayHead\">Image • word</h2>\r\n              <div className=\"img\">\r\n               <img className=\"imagedisplay\" src={newImage} alt=\"display-img\"/>\r\n              </div>\r\n            </div>\r\n}\r\n\r\nexport default ImageDisplay;","import React, { useState } from \"react\";\r\n\r\nfunction Pronunce(props){\r\n\r\n  const [writenP,setWritenP]=useState()\r\n  const [pronounce,setPronounce]=useState()\r\n  \r\n  fetch(\"https://www.dictionaryapi.com/api/v3/references/collegiate/json/\"+props.addWord+\"?key=1f40dde8-50d6-4eb6-9168-6f465c469eb9\")\r\n  .then(response=> response.json())\r\n  .then(jsonResponse =>{\r\n  \r\n  if(jsonResponse==={}||jsonResponse[0]===undefined||jsonResponse[0].hwi===undefined||jsonResponse[0].hwi.prs[0].sound===undefined){\r\n   const writtenPron=\"\"\r\n     // Logic for subdirectory in order to create url\r\n\r\n    // var sou = \"https://media.merriam-webster.com/soundc11/r/retry01ld.wav\";\r\n    setWritenP(writtenPron)\r\n    setPronounce(\"\")\r\n  }else{\r\n    var writtenPron= jsonResponse[0].hwi.prs[0].mw;\r\n    var file = jsonResponse[0].hwi.prs[0].sound.audio;\r\n   \r\n    var uniChar = file.slice(0,1);\r\n    var biChar = file.slice(0,2);\r\n    var triChar = file.slice(0,3);\r\n    var subDir = \"\";\r\n \r\n    if (triChar === \"bix\") {\r\n        subDir = \"bix\";\r\n    } else if (biChar === \"gg\") {\r\n        subDir = \"gg\";\r\n    } else if (alphabetic(uniChar) === true) {\r\n        subDir = uniChar;\r\n    } else {\r\n        subDir = \"number\";\r\n    }\r\n \r\n     function alphabetic(inputtxt) {\r\n       var letters = /^[a-zA-Z]+$/;\r\n       if ((inputtxt.match(letters))) {\r\n           return true;\r\n       } else {\r\n           return false; \r\n       }\r\n     }\r\n    var url = \"https://media.merriam-webster.com/soundc11/\" + subDir + \"/\" + file + \".wav\";\r\n    setWritenP(writtenPron)\r\n    setPronounce(url)\r\n  }\r\n  })\r\n\r\n    return <div className=\"definition\">\r\n             <h2 className=\"displayHead\">Sound • word</h2>\r\n             <div className=\"pronounce\">\r\n                <p>{writenP}</p>\r\n                <p>noun</p>\r\n                <audio className=\"playbutton\" id=\"embed_player\" src={pronounce} autostart=\"false\" controls=\"true\"></audio>\r\n             </div>\r\n           </div>\r\n}\r\n\r\nexport default Pronunce;","import React,{useState} from \"react\";\r\n\r\nfunction Save(){\r\n\r\n    const [ownDefinition,setOwnDefinition]=useState();\r\n\r\n    function handleChange(event){\r\n        const newDefinition=event.target.value\r\n    setOwnDefinition(newDefinition)\r\n    }\r\n\r\n    function handleClick(event){\r\n       console.assert.log(ownDefinition)\r\n        event.preventDefault()\r\n    }\r\n\r\n\r\n\r\n    return <div className=\"definition\">\r\n             <p className=\"save-head\">Characters: 140</p>\r\n             <textarea onChange={handleChange} className=\"ownDefinition\" rows=\"5\" columns=\"20\" maxLength=\"140\" placeholder=\"Type the definition in your own words here or copy and paste from below. Limit 140 characters.\"></textarea>\r\n             <button onClick={handleClick} className=\"save-term\" >Save to your  Word &#8226; Bank</button>\r\n            </div>\r\n}\r\n\r\nexport default Save;","import React, { useState } from 'react';\r\nimport Header from \"../partials/Header\"\r\nimport Search from \"./Search\";\r\nimport Definition from \"./Definition\";\r\nimport Image from \"./Image\";\r\nimport Pronunce from \"./Pronunciation\";\r\nimport  Save from \"./save\";\r\n\r\nfunction AllSearchPages(){\r\n    const [text,setText]=useState();\r\n    \r\n  function handleWord(words){\r\n     setText(words)\r\n  }\r\n\r\n    return <div>\r\n                <Header />\r\n                    <Search onAdd={handleWord}/>\r\n                  <div className=\"container\">\r\n                    <Definition addText={text}/>\r\n                    <Image addImg={text}/>\r\n                    <Pronunce addWord={text}/>\r\n                    <Save />\r\n                  </div>        \r\n            </div>\r\n}\r\n\r\nexport default AllSearchPages;","import React from \"react\";\r\nimport Header from \"../partials/Header\"\r\nimport ownDefinition from \"../search/save\";\r\n\r\n\r\nfunction New(){\r\n\r\n    return <div>\r\n            <Header />\r\n            <div>\r\n            <p><ownDefinition/></p>\r\n            </div>\r\n           </div>\r\n}\r\n\r\nexport default New;","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport AllSearchPages from './search/AllSearchPages';\nimport New from \"./New/New\";\n\n\nfunction App() {\n  \n  return (  <Router>\n              <Switch>\n                <Route path=\"/\" exact component={AllSearchPages} />\n                <Route path=\"/wordbank\" exact component={New} />\n              </Switch>\n            </Router>\n         ) \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />,document.getElementById('root'));"],"sourceRoot":""}