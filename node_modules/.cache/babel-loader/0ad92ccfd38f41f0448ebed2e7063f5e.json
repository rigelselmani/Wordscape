{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rigel\\\\apps\\\\translate\\\\src\\\\components\\\\Image.jsx\";\nimport React, { useState } from \"react\";\n\nfunction ImageDisplay(props) {\n  const [newImage, setNewImage] = useState();\n  fetch(props.addImage).then(response => response.json()).then(jsonResponse => {\n    if (jsonResponse.hits[0] === undefined || jsonResponse === undefined) {\n      setNewImage(\"https://netflixroulette.files.wordpress.com/2013/01/image-not-found.gif\");\n    } else {\n      setNewImage(jsonResponse.hits[0].largeImageURL);\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"definition\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"displayHead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 15\n    }\n  }, \"Image \\u2022 word\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"imagedisplay\",\n    src: newImage === undefined ? \"https://cormack.uwaterloo.ca/abademo/120218TryAgain.png\" : newIm,\n    alt: \"display-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 16\n    }\n  })));\n}\n\nexport default ImageDisplay;","map":{"version":3,"sources":["C:/Users/rigel/apps/translate/src/components/Image.jsx"],"names":["React","useState","ImageDisplay","props","newImage","setNewImage","fetch","addImage","then","response","json","jsonResponse","hits","undefined","largeImageURL","newIm"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA4B;AAExB,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAuBJ,QAAQ,EAArC;AAEAK,EAAAA,KAAK,CAACH,KAAK,CAACI,QAAP,CAAL,CACCC,IADD,CACMC,QAAQ,IAAGA,QAAQ,CAACC,IAAT,EADjB,EAECF,IAFD,CAEMG,YAAY,IAAG;AAEnB,QAAGA,YAAY,CAACC,IAAb,CAAkB,CAAlB,MAAuBC,SAAvB,IAAkCF,YAAY,KAAGE,SAApD,EAA8D;AAC7DR,MAAAA,WAAW,CAAC,yEAAD,CAAX;AACA,KAFD,MAEK;AACJA,MAAAA,WAAW,CAACM,YAAY,CAACC,IAAb,CAAkB,CAAlB,EAAqBE,aAAtB,CAAX;AACA;AACF,GATD;AAWA,sBAAO;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADH,eAEG;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,GAAG,EAAEV,QAAQ,KAAIS,SAAZ,GAAsB,yDAAtB,GAAgFE,KAAnH;AAA2H,IAAA,GAAG,EAAC,aAA/H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAFH,CAAP;AAMH;;AAED,eAAeb,YAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction ImageDisplay(props){\r\n  \r\n    const [newImage,setNewImage]=useState();\r\n    \r\n    fetch(props.addImage)\r\n    .then(response=> response.json())\r\n    .then(jsonResponse =>{\r\n  \r\n      if(jsonResponse.hits[0]===undefined||jsonResponse===undefined){\r\n       setNewImage(\"https://netflixroulette.files.wordpress.com/2013/01/image-not-found.gif\")\r\n      }else{\r\n       setNewImage(jsonResponse.hits[0].largeImageURL)\r\n      }\r\n    })\r\n\r\n    return <div className=\"definition\">\r\n              <h2 className=\"displayHead\">Image â€¢ word</h2>\r\n              <div className=\"img\">\r\n               <img className=\"imagedisplay\" src={newImage ===undefined?\"https://cormack.uwaterloo.ca/abademo/120218TryAgain.png\":newIm } alt=\"display-img\"/>\r\n              </div>\r\n            </div>\r\n}\r\n\r\nexport default ImageDisplay;"]},"metadata":{},"sourceType":"module"}