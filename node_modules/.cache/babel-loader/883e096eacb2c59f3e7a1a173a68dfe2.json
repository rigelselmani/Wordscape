{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rigel\\\\apps\\\\translate\\\\src\\\\components\\\\Pronunciation.jsx\";\nimport React, { useState } from \"react\";\n\nfunction Pronunce(props) {\n  const [pronounce, setPronounce] = useState();\n  const [writenP, setWritenP] = useState();\n  fetch(\"https://www.dictionaryapi.com/api/v3/references/collegiate/json/\" + props.text + \"?key=1f40dde8-50d6-4eb6-9168-6f465c469eb9\").then(response => response.json()).then(jsonResponse => {\n    console.log(jsonResponse[0].hwi.prs[0].sound.audio);\n    var file = jsonResponse[0].hwi.prs[0].sound.audio; // Logic for subdirectory in order to create url\n\n    var uniChar = file.slice(0, 1);\n    var biChar = file.slice(0, 2);\n    var triChar = file.slice(0, 3);\n    var subDir = \"\";\n\n    if (triChar === \"bix\") {\n      subDir = \"bix\";\n    } else if (biChar === \"gg\") {\n      subDir = \"gg\";\n    } else if (alphabetic(uniChar) === true) {\n      subDir = uniChar;\n    } else {\n      subDir = \"number\";\n    }\n\n    function alphabetic(inputtxt) {\n      var letters = /^[a-zA-Z]+$/;\n\n      if (inputtxt.match(letters)) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    var url = \"https://media.merriam-webster.com/soundc11/\" + subDir + \"/\" + file + \".wav\";\n    setWritenP(writtenPron);\n    setPronounce(url);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"definition\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 14\n    }\n  }, \"Sound \\u2022 word\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"space\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"audio\", {\n    id: \"embed_player\",\n    src: pronounce,\n    autostart: \"false\",\n    controls: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default Pronunce;","map":{"version":3,"sources":["C:/Users/rigel/apps/translate/src/components/Pronunciation.jsx"],"names":["React","useState","Pronunce","props","pronounce","setPronounce","writenP","setWritenP","fetch","text","then","response","json","jsonResponse","console","log","hwi","prs","sound","audio","file","uniChar","slice","biChar","triChar","subDir","alphabetic","inputtxt","letters","match","url","writtenPron"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AAEtB,QAAM,CAACC,SAAD,EAAWC,YAAX,IAAyBJ,QAAQ,EAAvC;AACA,QAAM,CAACK,OAAD,EAASC,UAAT,IAAqBN,QAAQ,EAAnC;AAEAO,EAAAA,KAAK,CAAC,qEAAmEL,KAAK,CAACM,IAAzE,GAA8E,2CAA/E,CAAL,CACCC,IADD,CACMC,QAAQ,IAAGA,QAAQ,CAACC,IAAT,EADjB,EAECF,IAFD,CAEMG,YAAY,IAAG;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,YAAY,CAAC,CAAD,CAAZ,CAAgBG,GAAhB,CAAoBC,GAApB,CAAwB,CAAxB,EAA2BC,KAA3B,CAAiCC,KAA7C;AAEA,QAAIC,IAAI,GAAGP,YAAY,CAAC,CAAD,CAAZ,CAAgBG,GAAhB,CAAoBC,GAApB,CAAwB,CAAxB,EAA2BC,KAA3B,CAAiCC,KAA5C,CAHoB,CAIpB;;AACA,QAAIE,OAAO,GAAGD,IAAI,CAACE,KAAL,CAAW,CAAX,EAAa,CAAb,CAAd;AACA,QAAIC,MAAM,GAAGH,IAAI,CAACE,KAAL,CAAW,CAAX,EAAa,CAAb,CAAb;AACA,QAAIE,OAAO,GAAGJ,IAAI,CAACE,KAAL,CAAW,CAAX,EAAa,CAAb,CAAd;AACA,QAAIG,MAAM,GAAG,EAAb;;AAEA,QAAID,OAAO,KAAK,KAAhB,EAAuB;AACnBC,MAAAA,MAAM,GAAG,KAAT;AACH,KAFD,MAEO,IAAIF,MAAM,KAAK,IAAf,EAAqB;AACxBE,MAAAA,MAAM,GAAG,IAAT;AACH,KAFM,MAEA,IAAIC,UAAU,CAACL,OAAD,CAAV,KAAwB,IAA5B,EAAkC;AACrCI,MAAAA,MAAM,GAAGJ,OAAT;AACH,KAFM,MAEA;AACHI,MAAAA,MAAM,GAAG,QAAT;AACH;;AAED,aAASC,UAAT,CAAoBC,QAApB,EAA8B;AAC7B,UAAIC,OAAO,GAAG,aAAd;;AACA,UAAKD,QAAQ,CAACE,KAAT,CAAeD,OAAf,CAAL,EAA+B;AAC3B,eAAO,IAAP;AACH,OAFD,MAEO;AACH,eAAO,KAAP;AACH;AACJ;;AACE,QAAIE,GAAG,GAAG,gDAAgDL,MAAhD,GAAyD,GAAzD,GAA+DL,IAA/D,GAAsE,MAAhF;AACDb,IAAAA,UAAU,CAACwB,WAAD,CAAV;AACA1B,IAAAA,YAAY,CAACyB,GAAD,CAAZ;AACC,GAjCD;AAmCE,sBAAO;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAO,IAAA,EAAE,EAAC,cAAV;AAAyB,IAAA,GAAG,EAAE1B,SAA9B;AAAyC,IAAA,SAAS,EAAC,OAAnD;AAA2D,IAAA,QAAQ,EAAC,MAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CAFF,CAAP;AAMH;;AAED,eAAeF,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction Pronunce(props){\r\n\r\n  const [pronounce,setPronounce]=useState()\r\n  const [writenP,setWritenP]=useState()\r\n\r\n  fetch(\"https://www.dictionaryapi.com/api/v3/references/collegiate/json/\"+props.text+\"?key=1f40dde8-50d6-4eb6-9168-6f465c469eb9\")\r\n  .then(response=> response.json())\r\n  .then(jsonResponse =>{\r\n   console.log(jsonResponse[0].hwi.prs[0].sound.audio)\r\n  \r\n   var file = jsonResponse[0].hwi.prs[0].sound.audio;\r\n   // Logic for subdirectory in order to create url\r\n   var uniChar = file.slice(0,1);\r\n   var biChar = file.slice(0,2);\r\n   var triChar = file.slice(0,3);\r\n   var subDir = \"\";\r\n\r\n   if (triChar === \"bix\") {\r\n       subDir = \"bix\";\r\n   } else if (biChar === \"gg\") {\r\n       subDir = \"gg\";\r\n   } else if (alphabetic(uniChar) === true) {\r\n       subDir = uniChar;\r\n   } else {\r\n       subDir = \"number\";\r\n   }\r\n\r\n   function alphabetic(inputtxt) {\r\n    var letters = /^[a-zA-Z]+$/;\r\n    if ((inputtxt.match(letters))) {\r\n        return true;\r\n    } else {\r\n        return false; \r\n    }\r\n}\r\n   var url = \"https://media.merriam-webster.com/soundc11/\" + subDir + \"/\" + file + \".wav\";\r\n  setWritenP(writtenPron)\r\n  setPronounce(url)\r\n  })\r\n\r\n    return <div className=\"definition\">\r\n             <h2>Sound â€¢ word</h2>\r\n             <div className=\"space\">\r\n                <audio id=\"embed_player\" src={pronounce} autostart=\"false\" controls=\"true\"></audio>\r\n             </div>\r\n           </div>\r\n}\r\n\r\nexport default Pronunce;"]},"metadata":{},"sourceType":"module"}