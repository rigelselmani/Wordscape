{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rigel\\\\apps\\\\translate\\\\src\\\\components\\\\Pronunciation.jsx\";\nimport React, { useState } from \"react\";\n\nfunction Pronunce(props) {\n  const [writenP, setWritenP] = useState();\n  const [pronounce, setPronounce] = useState();\n  fetch(props.addPronounce).then(response => response.json()).then(jsonResponse => {\n    if (jsonResponse === {} || jsonResponse[0] === undefined || jsonResponse[0].hwi === undefined || jsonResponse[0].hwi.prs[0].sound === undefined) {\n      const writtenPron = \"\"; // Logic for subdirectory in order to create url\n      // var sou = \"https://media.merriam-webster.com/soundc11/r/retry01ld.wav\";\n\n      setWritenP(writtenPron);\n      setPronounce(\"\");\n    } else {\n      var writtenPron = jsonResponse[0].hwi.prs[0].mw;\n      var file = jsonResponse[0].hwi.prs[0].sound.audio;\n      var uniChar = file.slice(0, 1);\n      var biChar = file.slice(0, 2);\n      var triChar = file.slice(0, 3);\n      var subDir = \"\";\n\n      if (triChar === \"bix\") {\n        subDir = \"bix\";\n      } else if (biChar === \"gg\") {\n        subDir = \"gg\";\n      } else if (alphabetic(uniChar) === true) {\n        subDir = uniChar;\n      } else {\n        subDir = \"number\";\n      }\n\n      function alphabetic(inputtxt) {\n        var letters = /^[a-zA-Z]+$/;\n\n        if (inputtxt.match(letters)) {\n          return true;\n        } else {\n          return false;\n        }\n      }\n\n      var url = \"https://media.merriam-webster.com/soundc11/\" + subDir + \"/\" + file + \".wav\";\n      setWritenP(writtenPron);\n      setPronounce(url);\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"definition\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"displayHead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 14\n    }\n  }, \"Sound \\u2022 word\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pronounce\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, writenP === undefined ? \"Search a word\" : writenP), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"noun\"), /*#__PURE__*/React.createElement(\"audio\", {\n    className: \"playbutton\",\n    id: \"embed_player\",\n    src: pronounce,\n    autostart: \"false\",\n    controls: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default Pronunce;","map":{"version":3,"sources":["C:/Users/rigel/apps/translate/src/components/Pronunciation.jsx"],"names":["React","useState","Pronunce","props","writenP","setWritenP","pronounce","setPronounce","fetch","addPronounce","then","response","json","jsonResponse","undefined","hwi","prs","sound","writtenPron","mw","file","audio","uniChar","slice","biChar","triChar","subDir","alphabetic","inputtxt","letters","match","url"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction Pronunce(props){\r\n\r\n  const [writenP,setWritenP]=useState()\r\n  const [pronounce,setPronounce]=useState()\r\n  \r\n  fetch(props.addPronounce)\r\n  .then(response=> response.json())\r\n  .then(jsonResponse =>{\r\n \r\n  if(jsonResponse==={}||jsonResponse[0]===undefined||jsonResponse[0].hwi===undefined||jsonResponse[0].hwi.prs[0].sound===undefined){\r\n   const writtenPron=\"\"\r\n     // Logic for subdirectory in order to create url\r\n\r\n    // var sou = \"https://media.merriam-webster.com/soundc11/r/retry01ld.wav\";\r\n    setWritenP(writtenPron)\r\n    setPronounce(\"\")\r\n  }else{\r\n    var writtenPron= jsonResponse[0].hwi.prs[0].mw;\r\n    var file = jsonResponse[0].hwi.prs[0].sound.audio;\r\n   \r\n    var uniChar = file.slice(0,1);\r\n    var biChar = file.slice(0,2);\r\n    var triChar = file.slice(0,3);\r\n    var subDir = \"\";\r\n \r\n    if (triChar === \"bix\") {\r\n        subDir = \"bix\";\r\n    } else if (biChar === \"gg\") {\r\n        subDir = \"gg\";\r\n    } else if (alphabetic(uniChar) === true) {\r\n        subDir = uniChar;\r\n    } else {\r\n        subDir = \"number\";\r\n    }\r\n \r\n     function alphabetic(inputtxt) {\r\n       var letters = /^[a-zA-Z]+$/;\r\n       if ((inputtxt.match(letters))) {\r\n           return true;\r\n       } else {\r\n           return false; \r\n       }\r\n     }\r\n    var url = \"https://media.merriam-webster.com/soundc11/\" + subDir + \"/\" + file + \".wav\";\r\n    setWritenP(writtenPron)\r\n    setPronounce(url)\r\n  }\r\n  })\r\n\r\n    return <div className=\"definition\">\r\n             <h2 className=\"displayHead\">Sound â€¢ word</h2>\r\n             <div className=\"pronounce\">\r\n                <p>{writenP===undefined?\"Search a word\":writenP}</p>\r\n                <p>noun</p>\r\n                <audio className=\"playbutton\" id=\"embed_player\" src={pronounce} autostart=\"false\" controls=\"true\"></audio>\r\n             </div>\r\n           </div>\r\n}\r\n\r\nexport default Pronunce;"]},"metadata":{},"sourceType":"module"}