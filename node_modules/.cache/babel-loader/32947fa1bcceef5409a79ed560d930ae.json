{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rigel\\\\apps\\\\translate\\\\src\\\\components\\\\Pronunciation.jsx\";\nimport React, { useState } from \"react\";\n\nfunction Pronunce(props) {\n  // const [writenP,setWritenP]=useState()\n  // const [pronounce,setPronounce]=useState()\n  // fetch(\"https://www.dictionaryapi.com/api/v3/references/collegiate/json/\"+props.addWord+\"?key=1f40dde8-50d6-4eb6-9168-6f465c469eb9\")\n  // .then(response=> response.json())\n  // .then(jsonResponse =>{\n  // if(jsonResponse[0].hwi.prs[0]===undefined){\n  //  const writtenPron=\"try\"\n  //  const file=\"try\"\n  //    // Logic for subdirectory in order to create url\n  //  var uniChar = file.slice(0,1);\n  //  var biChar = file.slice(0,2);\n  //  var triChar = file.slice(0,3);\n  //  var subDir = \"\";\n  //  if (triChar === \"bix\") {\n  //      subDir = \"bix\";\n  //  } else if (biChar === \"gg\") {\n  //      subDir = \"gg\";\n  //  } else if (alphabetic(uniChar) === true) {\n  //      subDir = uniChar;\n  //  } else {\n  //      subDir = \"number\";\n  //  }\n  //   function alphabetic(inputtxt) {\n  //     var letters = /^[a-zA-Z]+$/;\n  //     if ((inputtxt.match(letters))) {\n  //         return true;\n  //     } else {\n  //         return false; \n  //     }\n  //   }\n  //   var url = \"https://media.merriam-webster.com/soundc11/\" + subDir + \"/\" + file + \".wav\";\n  //   setWritenP(writtenPron)\n  //   setPronounce(url)\n  // }else{\n  //   var writtenPron= jsonResponse[0].hwi.prs[0].mw;\n  //   var file = jsonResponse[0].hwi.prs[0].sound.audio;\n  //   var uniChar = file.slice(0,1);\n  //   var biChar = file.slice(0,2);\n  //   var triChar = file.slice(0,3);\n  //   var subDir = \"\";\n  //   if (triChar === \"bix\") {\n  //       subDir = \"bix\";\n  //   } else if (biChar === \"gg\") {\n  //       subDir = \"gg\";\n  //   } else if (alphabetic(uniChar) === true) {\n  //       subDir = uniChar;\n  //   } else {\n  //       subDir = \"number\";\n  //   }\n  //    function alphabetic(inputtxt) {\n  //      var letters = /^[a-zA-Z]+$/;\n  //      if ((inputtxt.match(letters))) {\n  //          return true;\n  //      } else {\n  //          return false; \n  //      }\n  //    }\n  //   var url = \"https://media.merriam-webster.com/soundc11/\" + subDir + \"/\" + file + \".wav\";\n  //   setWritenP(writtenPron)\n  //   setPronounce(url)\n  // }\n  // })\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"definition\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 14\n    }\n  }, \"Sound \\u2022 word\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"space\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"audio\", {\n    id: \"embed_player\",\n    autostart: \"false\",\n    controls: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default Pronunce;","map":{"version":3,"sources":["C:/Users/rigel/apps/translate/src/components/Pronunciation.jsx"],"names":["React","useState","Pronunce","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AAEtB;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEE,sBAAO;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,eAEG;AAAO,IAAA,EAAE,EAAC,cAAV;AAA0B,IAAA,SAAS,EAAC,OAApC;AAA4C,IAAA,QAAQ,EAAC,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,CAFF,CAAP;AAOH;;AAED,eAAeD,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction Pronunce(props){\r\n\r\n  // const [writenP,setWritenP]=useState()\r\n  // const [pronounce,setPronounce]=useState()\r\n  // fetch(\"https://www.dictionaryapi.com/api/v3/references/collegiate/json/\"+props.addWord+\"?key=1f40dde8-50d6-4eb6-9168-6f465c469eb9\")\r\n  // .then(response=> response.json())\r\n  // .then(jsonResponse =>{\r\n  \r\n  // if(jsonResponse[0].hwi.prs[0]===undefined){\r\n  //  const writtenPron=\"try\"\r\n  //  const file=\"try\"\r\n  //    // Logic for subdirectory in order to create url\r\n  //  var uniChar = file.slice(0,1);\r\n  //  var biChar = file.slice(0,2);\r\n  //  var triChar = file.slice(0,3);\r\n  //  var subDir = \"\";\r\n\r\n  //  if (triChar === \"bix\") {\r\n  //      subDir = \"bix\";\r\n  //  } else if (biChar === \"gg\") {\r\n  //      subDir = \"gg\";\r\n  //  } else if (alphabetic(uniChar) === true) {\r\n  //      subDir = uniChar;\r\n  //  } else {\r\n  //      subDir = \"number\";\r\n  //  }\r\n\r\n  //   function alphabetic(inputtxt) {\r\n  //     var letters = /^[a-zA-Z]+$/;\r\n  //     if ((inputtxt.match(letters))) {\r\n  //         return true;\r\n  //     } else {\r\n  //         return false; \r\n  //     }\r\n  //   }\r\n  //   var url = \"https://media.merriam-webster.com/soundc11/\" + subDir + \"/\" + file + \".wav\";\r\n  //   setWritenP(writtenPron)\r\n  //   setPronounce(url)\r\n  // }else{\r\n  //   var writtenPron= jsonResponse[0].hwi.prs[0].mw;\r\n  //   var file = jsonResponse[0].hwi.prs[0].sound.audio;\r\n   \r\n  //   var uniChar = file.slice(0,1);\r\n  //   var biChar = file.slice(0,2);\r\n  //   var triChar = file.slice(0,3);\r\n  //   var subDir = \"\";\r\n \r\n  //   if (triChar === \"bix\") {\r\n  //       subDir = \"bix\";\r\n  //   } else if (biChar === \"gg\") {\r\n  //       subDir = \"gg\";\r\n  //   } else if (alphabetic(uniChar) === true) {\r\n  //       subDir = uniChar;\r\n  //   } else {\r\n  //       subDir = \"number\";\r\n  //   }\r\n \r\n  //    function alphabetic(inputtxt) {\r\n  //      var letters = /^[a-zA-Z]+$/;\r\n  //      if ((inputtxt.match(letters))) {\r\n  //          return true;\r\n  //      } else {\r\n  //          return false; \r\n  //      }\r\n  //    }\r\n  //   var url = \"https://media.merriam-webster.com/soundc11/\" + subDir + \"/\" + file + \".wav\";\r\n  \r\n  //   setWritenP(writtenPron)\r\n  //   setPronounce(url)\r\n  // }\r\n  // })\r\n\r\n    return <div className=\"definition\">\r\n             <h2>Sound â€¢ word</h2>\r\n             <div className=\"space\">\r\n                <p></p>\r\n                <audio id=\"embed_player\"  autostart=\"false\" controls=\"true\"></audio>\r\n             </div>\r\n           </div>\r\n}\r\n\r\nexport default Pronunce;"]},"metadata":{},"sourceType":"module"}